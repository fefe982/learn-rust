// https://leetcode.com/problems/maximum-number-of-alloys/
// 2861. Maximum Number of Alloys
pub struct Solution;
impl Solution {
    pub fn max_number_of_alloys(
        n: i32,
        k: i32,
        budget: i32,
        composition: Vec<Vec<i32>>,
        stock: Vec<i32>,
        cost: Vec<i32>,
    ) -> i32 {
        let mut max = 0;
        for i in 0..k as usize {
            let mut low = 0;
            let mut high = ((budget / cost[0] + stock[0]) / composition[i][0] + 1) as i64;
            while low + 1 < high {
                let mid = (low + high) / 2;
                let mut total = 0;
                for j in 0..n as usize {
                    total += std::cmp::max(mid * composition[i][j] as i64 - stock[j] as i64, 0) * cost[j] as i64;
                }
                if total > budget as i64 {
                    high = mid;
                } else {
                    low = mid;
                }
            }
            max = max.max(low)
        }
        max as i32
    }
}
#[cfg(test)]
mod tests {
    use super::*;
    use crate::*;
    #[test]
    fn test_max_number_of_alloys() {
        assert_eq!(
            Solution::max_number_of_alloys(
                20,
                20,
                71522379,
                vec_vec![
                    [67, 83, 9, 11, 32, 88, 19, 90, 67, 75, 47, 3, 99, 87, 8, 25, 72, 42, 15, 51],
                    [6, 66, 54, 56, 88, 31, 91, 45, 66, 83, 86, 11, 70, 99, 81, 11, 9, 46, 82, 5],
                    [62, 8, 96, 18, 77, 49, 27, 58, 66, 52, 82, 30, 23, 69, 61, 100, 84, 17, 52, 20],
                    [62, 8, 33, 67, 81, 38, 29, 41, 34, 90, 65, 78, 80, 76, 58, 2, 3, 67, 75, 29],
                    [91, 37, 79, 20, 44, 98, 5, 100, 89, 16, 45, 46, 60, 36, 69, 20, 78, 84, 14, 45],
                    [96, 95, 84, 56, 8, 45, 44, 84, 36, 35, 56, 2, 69, 36, 40, 70, 59, 74, 58, 67],
                    [95, 11, 31, 56, 9, 42, 48, 72, 51, 38, 37, 78, 86, 96, 24, 83, 43, 28, 1, 34],
                    [92, 91, 95, 50, 56, 98, 27, 54, 47, 71, 25, 2, 47, 42, 55, 4, 46, 86, 61, 16],
                    [66, 49, 73, 31, 83, 69, 85, 27, 26, 98, 11, 19, 17, 53, 1, 84, 85, 36, 100, 24],
                    [13, 9, 63, 99, 66, 54, 51, 48, 55, 21, 74, 47, 65, 11, 97, 87, 61, 46, 61, 45],
                    [32, 13, 75, 16, 71, 47, 17, 51, 93, 12, 49, 80, 8, 14, 73, 97, 52, 79, 69, 97],
                    [60, 82, 84, 69, 96, 99, 91, 86, 93, 41, 59, 56, 12, 5, 48, 97, 36, 62, 69, 47],
                    [72, 86, 42, 10, 73, 21, 51, 79, 80, 29, 1, 70, 97, 21, 76, 68, 22, 44, 19, 62],
                    [42, 24, 59, 6, 60, 34, 88, 80, 2, 82, 23, 31, 22, 85, 46, 9, 41, 56, 69, 42],
                    [6, 100, 43, 22, 79, 87, 25, 9, 25, 62, 93, 30, 11, 72, 4, 2, 22, 48, 46, 71],
                    [67, 12, 47, 52, 18, 91, 22, 95, 97, 89, 66, 68, 66, 7, 50, 38, 7, 7, 14, 95],
                    [95, 76, 10, 32, 3, 26, 60, 6, 34, 99, 48, 97, 73, 27, 1, 16, 34, 14, 39, 67],
                    [27, 39, 17, 23, 13, 27, 96, 98, 82, 100, 46, 1, 99, 60, 12, 31, 31, 24, 4, 5],
                    [27, 27, 2, 39, 87, 41, 58, 30, 66, 7, 11, 86, 95, 87, 59, 78, 69, 2, 95, 48],
                    [87, 52, 98, 66, 72, 97, 65, 41, 39, 93, 24, 96, 59, 4, 13, 70, 59, 53, 3, 62]
                ],
                vec![13, 39, 7, 42, 35, 71, 13, 50, 25, 32, 86, 78, 35, 67, 70, 19, 73, 16, 61, 75],
                vec![43, 58, 5, 26, 41, 86, 82, 41, 96, 25, 43, 50, 61, 56, 90, 62, 5, 94, 19, 95]
            ),
            1583
        );
        assert_eq!(
            Solution::max_number_of_alloys(3, 2, 15, vec_vec![[1, 1, 1], [1, 1, 10]], vec![0, 0, 0], vec![1, 2, 3]),
            2
        );
        assert_eq!(
            Solution::max_number_of_alloys(
                3,
                2,
                15,
                vec_vec![[1, 1, 1], [1, 1, 10]],
                vec![0, 0, 100],
                vec![1, 2, 3]
            ),
            5
        );
        assert_eq!(
            Solution::max_number_of_alloys(2, 3, 10, vec_vec![[2, 1], [1, 2], [1, 1]], vec![1, 1], vec![5, 5]),
            2
        );
    }
}
